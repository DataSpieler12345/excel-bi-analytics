Here's the cardinality of the entities in the data model:

- `Customer` has a one-to-many relationship with `Invoice`
- `Invoice` has a one-to-many relationship with `Invoice_Element`
- `Item` has a many-to-one relationship with `Product_Group`
- `Discount` does not have any relationships with other entities
- `Invoice_Element` has a many-to-one relationship with both `Invoice` and `Item`, and a many-to-one relationship with `Discount`
- `Customer_Rating` has a many-to-one relationship with both `Customer` and `Item`

In general, these relationships can be summarized as follows:

- One customer can have many invoices
- One invoice can have many invoice elements (i.e. items)
- Each item belongs to one product group
- Each invoice element can have one discount applied to it
- Each customer can rate many items


---------------------------------------------------------------------------------------------------

Hier sind die Kardinalitäten der Entitäten in diesem Datenmodell:

- `Customer` hat eine Eins-zu-Viele-Beziehung zu `Invoice`.
- `Invoice` hat eine Eins-zu-Viele-Beziehung zu `Invoice_Element`.
- `Item` hat eine Viele-zu-Eins-Beziehung zu `Product_Group`.
- `Invoice_Element` hat eine Viele-zu-Eins-Beziehung zu sowohl `Invoice` als auch `Item`, und eine Viele-zu-Eins-Beziehung zu `Discount`.
- `Customer_Rating` hat eine Viele-zu-Eins-Beziehung zu sowohl `Customer` als auch `Item`.

Zusammengefasst:

- Ein Kunde kann viele Rechnungen haben.
- Eine Rechnung kann viele Rechnungselemente (d.h. Artikel) haben.
- Jeder Artikel gehört zu einer Produktgruppe.
- Jedes Rechnungselement kann einen Rabatt haben, der angewendet wird.
- Jeder Kunde kann viele Artikel bewerten.